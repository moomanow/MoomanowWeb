package com.moomanow.web.common.bean;



import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SocialNetwork generated by hbm2java
 */
@Entity
@Table(name="SYS_M_SOCIAL_NETWORK"
)
public class SocialNetwork  implements java.io.Serializable,com.moomanow.core.common.bean.EntityBean {


     private Long idSocialNetwork;
     private SocialNetworkType socialNetworkType;
     private Long idUser;
     private String socialProfileId;
     private String socialOauthToken;
     private String socialOauthSecretToken;
     private String socialAccountName;
     private String emailSocialAccount;
     private String status;
     private Date createDate;
     private String createUser;
     private Date updateDate;
     private String updateUser;
     private List<UserMapSocialNetwork> userMapSocialNetworks = new ArrayList<UserMapSocialNetwork>(0);

    public SocialNetwork() {
    }

	
    public SocialNetwork(Long idUser) {
        this.idUser = idUser;
    }
    public SocialNetwork(SocialNetworkType socialNetworkType, Long idUser, String socialProfileId, String socialOauthToken, String socialOauthSecretToken, String socialAccountName, String emailSocialAccount, String status, Date createDate, String createUser, Date updateDate, String updateUser, List<UserMapSocialNetwork> userMapSocialNetworks) {
       this.socialNetworkType = socialNetworkType;
       this.idUser = idUser;
       this.socialProfileId = socialProfileId;
       this.socialOauthToken = socialOauthToken;
       this.socialOauthSecretToken = socialOauthSecretToken;
       this.socialAccountName = socialAccountName;
       this.emailSocialAccount = emailSocialAccount;
       this.status = status;
       this.createDate = createDate;
       this.createUser = createUser;
       this.updateDate = updateDate;
       this.updateUser = updateUser;
       this.userMapSocialNetworks = userMapSocialNetworks;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID_SOCIAL_NETWORK", unique=true, nullable=false)
    public Long getIdSocialNetwork() {
        return this.idSocialNetwork;
    }
    
    public void setIdSocialNetwork(Long idSocialNetwork) {
        this.idSocialNetwork = idSocialNetwork;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_SOCIAL_NETWORK_TYPE")
    public SocialNetworkType getSocialNetworkType() {
        return this.socialNetworkType;
    }
    
    public void setSocialNetworkType(SocialNetworkType socialNetworkType) {
        this.socialNetworkType = socialNetworkType;
    }

    
    @Column(name="ID_USER", nullable=false)
    public Long getIdUser() {
        return this.idUser;
    }
    
    public void setIdUser(Long idUser) {
        this.idUser = idUser;
    }

    
    @Column(name="SOCIAL_PROFILE_ID")
    public String getSocialProfileId() {
        return this.socialProfileId;
    }
    
    public void setSocialProfileId(String socialProfileId) {
        this.socialProfileId = socialProfileId;
    }

    
    @Column(name="SOCIAL_OAUTH_TOKEN")
    public String getSocialOauthToken() {
        return this.socialOauthToken;
    }
    
    public void setSocialOauthToken(String socialOauthToken) {
        this.socialOauthToken = socialOauthToken;
    }

    
    @Column(name="SOCIAL_OAUTH_SECRET_TOKEN", length=400)
    public String getSocialOauthSecretToken() {
        return this.socialOauthSecretToken;
    }
    
    public void setSocialOauthSecretToken(String socialOauthSecretToken) {
        this.socialOauthSecretToken = socialOauthSecretToken;
    }

    
    @Column(name="SOCIAL_ACCOUNT_NAME")
    public String getSocialAccountName() {
        return this.socialAccountName;
    }
    
    public void setSocialAccountName(String socialAccountName) {
        this.socialAccountName = socialAccountName;
    }

    
    @Column(name="EMAIL_SOCIAL_ACCOUNT")
    public String getEmailSocialAccount() {
        return this.emailSocialAccount;
    }
    
    public void setEmailSocialAccount(String emailSocialAccount) {
        this.emailSocialAccount = emailSocialAccount;
    }

    
    @Column(name="STATUS", length=1)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    
    @Column(name="CREATE_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    
    public Date getCreateDate() {
        return this.createDate;
    }
    
    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    
    @Column(name="CREATE_USER")
    public String getCreateUser() {
        return this.createUser;
    }
    
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    
    @Column(name="UPDATE_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    
    public Date getUpdateDate() {
        return this.updateDate;
    }
    
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

    
    @Column(name="UPDATE_USER")
    public String getUpdateUser() {
        return this.updateUser;
    }
    
    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialNetwork")
    public List<UserMapSocialNetwork> getUserMapSocialNetworks() {
        return this.userMapSocialNetworks;
    }
    
    public void setUserMapSocialNetworks(List<UserMapSocialNetwork> userMapSocialNetworks) {
        this.userMapSocialNetworks = userMapSocialNetworks;
    }




}


